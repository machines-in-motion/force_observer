# ROBOT : 'iiwa' 
# TASK  : normal force task

# MPC & sim parameters
simu_freq: 1000        # Simulation frequency in Hz
plan_freq: 1000       # Planning frequency
T_tot: 400             # Simu duration (s)-
RICCATI: False 

# Definition of the contact surface in the simulator
# It is aligned with the LOCAL contact frame by default
# User-defined offset expressed in the LOCAL contact frame :
contact_plane_offset: [0., 0., 0.034] 

# Start of the reaching phase
T_REACH: 1.
# Start of the tracking phase
T_TRACK: 3.
# Start of the contact phase
T_CONTACT: 5.
# End of ramp
T_RAMP: 6.
# Start of the circle tracking phase
T_CIRCLE: 7.

# General
dt: 0.006                       # OCP integration step 
N_h: 4                          # Horizon length in nodes
maxiter: 3
# q0: [0., 0.34, 0., -0.75, 0., 0., 0.]               # Initial robot joint configuration
q0: [0., 1.0471975511965976, 0., -1.1344640137963142, 0.2,  0.7853981633974483]               # Initial robot joint configuration
dq0: [0.,0.,0.,0.,0.,0.]                         # Initial robot joint velocity

# Pin model frame name of the end-effector 
#   - Used for frame-related costs and plots generation
#   - Overrides the frame name 'DEFAULT' values below
frame_of_interest: 'contact'

# List of contacts
contacts:
  - {
      contactModelFrameName: 'contact',                   # frame name in pinocchio model
      pinocchioReferenceFrame: 'LOCAL_WORLD_ALIGNED',     # LOCAL, WORLD, LOCAL_WORLD_ALIGNED
      contactModelType: '1Dz',                             # 1Dx, 1Dy, 1Dz, 3D, 6D
      contactModelTranslationRef: '',                     #[0.7, 0.0, 0.0],       # 3d vector
      contactModelRotationRef: '',                        # 3d matrix
      contactModelGains: [0, 10],                         # Baumgarte stabilization gains
      active: False                                       # Initially active? 
    }
contactPosition: [0.65, 0., 0.01] # table
oPc_offset: [0., 0., 0.] 
pinRefFrame: 'LOCAL_WORLD_ALIGNED'
contactType: '1Dz'

USE_LATERAL_FRICTION: True
USE_DELTA_F: True
FORCE_INTEGRAL: False
COST_SHIFT: True
DF_HORIZON: 0  # Horizon of the estimation (0 calls the estimators implementation without horizon)
# note that df horizon 0 is different from 1 because the forward kyn in MHE does use the acceleration.

# Cost function composition (a.k.a which terms will be actually used in the OCP)
# to select from the list : 'stateReg', 'ctrlReg', 'ctrlRegGrav', 'stateLim', 'ctrlLim'
#                           'force', 'friction', 'translation', 'velocity', 'placement'
WHICH_COSTS: ['force', 'translation', 'velocity', 'stateReg', 'ctrlRegGrav', 'rotation']  

# Cost function weights and activations
 # 'force' : end-effector frame force (translation + rotation)
frameForceWeights:  [1, 1., 1, 0., 0., 0.]
frameForceWeight: 5.
frameForceRef: [0., 0., 50, 0., 0., 0.]    
frameForceFrameName: 'contact'

 # 'stateReg' : state regularization  
stateRegWeights: [20., 20., 20., 10., 10., 10, 2., 2., 2., 2., 2., 2.]
stateRegWeight: 0.02 
stateRegWeightTerminal: 0.02
stateRegRef: 'DEFAULT'

 # 'ctrlReg', 'ctrlRegGrav' : torque regularization 
ctrlRegWeights: [1., 1., 1., 1., 1., 1.]
ctrlRegWeight: 0.0001
ctrlRegRef: 'DEFAULT' 

 # 'translation' : end-effector frame translation 
frameTranslationWeights:  [1., 1., 1.]
frameTranslationWeight: 65 #65.
frameTranslationWeightTerminal: 100.
alpha_quadflatlog: 0.01
frameTranslationRef: 'DEFAULT'
frameTranslationFrameName: 'contact'

 # 'velocity' : end-effector frame velocity (translation + rotation)
frameVelocityWeights:  [1., 1., 1., 1., 1., 1.]
frameVelocityWeight: 0.05
frameVelocityWeightTerminal: 1
frameVelocityRef: 'DEFAULT'    
frameVelocityFrameName: 'contact'

 # 'rotation' : end-effector frame orientation
frameRotationWeights:  [1., 1., 1.]
frameRotationWeight: 20. #0.05
frameRotationWeightTerminal: 20. #0.1 #1.
frameRotationRef: 'DEFAULT'
frameRotationFrameName: 'contact'


# armature
armature:  [.0, .0, .0, .0, .0, .0] 